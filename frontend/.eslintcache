[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/views/Core/index.js":"4","/app/src/views/Core/routes.js":"5","/app/src/components/LoadingScreen.js":"6","/app/src/constants.js":"7","/app/src/layouts/index.js":"8","/app/src/views/TeamTeam/index.js":"9","/app/src/views/NotFound/index.js":"10","/app/src/views/Team/index.js":"11","/app/src/views/Dashboard/CreateGame/index.js":"12","/app/src/views/Dashboard/index.js":"13","/app/src/views/Dashboard/StartGame/index.js":"14","/app/src/views/Dashboard/CreateTeam/index.js":"15","/app/src/layouts/Sidebar/index.js":"16","/app/src/store/index.js":"17","/app/src/store/reducers/index.js":"18","/app/src/store/sagas/index.js":"19","/app/src/store/reducers/team.js":"20","/app/src/store/sagas/team.js":"21","/app/src/store/actions/index.js":"22","/app/src/store/actions/team.js":"23","/app/src/store/actions/types.js":"24","/app/src/utils/api.js":"25","/app/src/store/actions/score.js":"26","/app/src/store/reducers/score.js":"27","/app/src/store/sagas/score.js":"28","/app/src/store/actions/global.js":"29","/app/src/store/reducers/global.js":"30","/app/src/components/SelectTeam.js":"31","/app/src/components/MatchesTable.js":"32"},{"size":478,"mtime":1612100373627,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1611859266211,"results":"35","hashOfConfig":"34"},{"size":331,"mtime":1612108955481,"results":"36","hashOfConfig":"34"},{"size":1430,"mtime":1612142132217,"results":"37","hashOfConfig":"34"},{"size":1944,"mtime":1612103612197,"results":"38","hashOfConfig":"34"},{"size":574,"mtime":1612096482322,"results":"39","hashOfConfig":"34"},{"size":219,"mtime":1612104702663,"results":"40","hashOfConfig":"34"},{"size":914,"mtime":1612105703304,"results":"41","hashOfConfig":"34"},{"size":1959,"mtime":1612152269120,"results":"42","hashOfConfig":"34"},{"size":1189,"mtime":1612104748837,"results":"43","hashOfConfig":"34"},{"size":3903,"mtime":1612150707654,"results":"44","hashOfConfig":"34"},{"size":2794,"mtime":1612151684399,"results":"45","hashOfConfig":"34"},{"size":3423,"mtime":1612150786363,"results":"46","hashOfConfig":"34"},{"size":3659,"mtime":1612151697340,"results":"47","hashOfConfig":"34"},{"size":2521,"mtime":1612143166122,"results":"48","hashOfConfig":"34"},{"size":1698,"mtime":1612105875065,"results":"49","hashOfConfig":"34"},{"size":411,"mtime":1612110951711,"results":"50","hashOfConfig":"34"},{"size":194,"mtime":1612136739834,"results":"51","hashOfConfig":"34"},{"size":201,"mtime":1612136321404,"results":"52","hashOfConfig":"34"},{"size":505,"mtime":1612139149774,"results":"53","hashOfConfig":"34"},{"size":879,"mtime":1612143169037,"results":"54","hashOfConfig":"34"},{"size":241,"mtime":1612136621548,"results":"55","hashOfConfig":"34"},{"size":567,"mtime":1612143099115,"results":"56","hashOfConfig":"34"},{"size":1120,"mtime":1612147612384,"results":"57","hashOfConfig":"34"},{"size":120,"mtime":1612112817234,"results":"58","hashOfConfig":"34"},{"size":1541,"mtime":1612148382315,"results":"59","hashOfConfig":"34"},{"size":998,"mtime":1612149955890,"results":"60","hashOfConfig":"34"},{"size":2743,"mtime":1612149928334,"results":"61","hashOfConfig":"34"},{"size":144,"mtime":1612136712513,"results":"62","hashOfConfig":"34"},{"size":330,"mtime":1612137037383,"results":"63","hashOfConfig":"34"},{"size":501,"mtime":1612142835296,"results":"64","hashOfConfig":"34"},{"size":1430,"mtime":1612150620334,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1o8zzz1",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/app/src/index.js",[],["137","138"],"/app/src/reportWebVitals.js",[],"/app/src/App.js",[],"/app/src/views/Core/index.js",[],"/app/src/views/Core/routes.js",[],"/app/src/components/LoadingScreen.js",[],"/app/src/constants.js",[],"/app/src/layouts/index.js",[],"/app/src/views/TeamTeam/index.js",["139","140"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport actions from \"src/store/actions\";\nimport SelectTeam from \"src/components/SelectTeam\";\nimport MatchesTable from \"src/components/MatchesTable\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingLeft: 36,\n    paddingRight: 36,\n  },\n  select: { marginLeft: 24, marginRight: 24, minWidth: \"100px\" },\n}));\n\nconst initForm = {\n  team1: 0,\n  team2: 0,\n};\n\nconst TeamTeam = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const teams = useSelector((state) => state.team.list);\n  const matches = useSelector((state) => state.score.teamteam);\n  const [form, setForm] = useState(initForm);\n\n  useEffect(() => {\n    dispatch(actions.scoreActions.clearStore());\n    dispatch(actions.teamActions.getTeamsRequest());\n  }, []);\n\n  useEffect(() => {\n    if (form.team1 !== 0 && form.team2 !== 0) {\n      dispatch(actions.scoreActions.getTeamTeamStatisticsRequest(form));\n    }\n  }, [form]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const _form = { ...form };\n    _form[name] = value;\n    setForm(_form);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Box my={6} display=\"flex\" alignItems=\"center\">\n        <h3>Select Teams:</h3>\n        <SelectTeam\n          className={classes.select}\n          items={teams}\n          name=\"team1\"\n          value={form.team1}\n          onChange={handleInputChange}\n        ></SelectTeam>\n        <h4>vs</h4>\n        <SelectTeam\n          className={classes.select}\n          items={teams}\n          name=\"team2\"\n          value={form.team2}\n          onChange={handleInputChange}\n        ></SelectTeam>\n      </Box>\n      <MatchesTable items={matches} teams={teams}></MatchesTable>\n    </div>\n  );\n};\n\nexport default TeamTeam;\n","/app/src/views/NotFound/index.js",[],"/app/src/views/Team/index.js",["141","142"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Box,\n  Divider,\n  makeStyles,\n} from \"@material-ui/core\";\nimport actions from \"src/store/actions\";\nimport SelectTeam from \"src/components/SelectTeam\";\nimport MatchesTable from \"src/components/MatchesTable\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingLeft: 36,\n    paddingRight: 36,\n  },\n  select: { marginLeft: 12, minWidth: \"100px\" },\n  divider: { margin: 32 },\n}));\n\nconst Team = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const teams = useSelector((state) => state.team.list);\n  const teamStatistic = useSelector((state) => state.score.team);\n  const [team, setTeam] = useState(0);\n\n  useEffect(() => {\n    dispatch(actions.scoreActions.clearStore());\n    dispatch(actions.teamActions.getTeamsRequest());\n  }, []);\n\n  useEffect(() => {\n    if (team !== 0) {\n      dispatch(actions.scoreActions.getTeamStatisticsRequest(team));\n    }\n  }, [team]);\n\n  useEffect(() => {\n    console.log(teamStatistic);\n  }, [teamStatistic]);\n\n  const handleInputChange = (event) => {\n    setTeam(event.target.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Box my={6} display=\"flex\" alignItems=\"center\">\n        <h3>Select Team:</h3>\n        <SelectTeam\n          className={classes.select}\n          items={teams}\n          value={team}\n          onChange={handleInputChange}\n        ></SelectTeam>\n      </Box>\n      {teamStatistic && (\n        <>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"Team analytics table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"right\">Games Played</TableCell>\n                  <TableCell align=\"center\">Wins</TableCell>\n                  <TableCell align=\"center\">Losses</TableCell>\n                  <TableCell align=\"center\">Draw</TableCell>\n                  <TableCell align=\"center\">Win Ratio</TableCell>\n                  <TableCell align=\"center\">GF</TableCell>\n                  <TableCell align=\"center\">GA</TableCell>\n                  <TableCell align=\"center\">GD</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell align=\"right\">\n                    {teamStatistic.statistic.wins +\n                      teamStatistic.statistic.losses +\n                      teamStatistic.statistic.draw}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {teamStatistic.statistic.wins}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {teamStatistic.statistic.losses}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {teamStatistic.statistic.draw}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {teamStatistic.statistic.ratio?.toFixed(2)}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {teamStatistic.statistic.gf}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {teamStatistic.statistic.ga}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {teamStatistic.statistic.gd}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Divider className={classes.divider} />\n          <h3>Match details:</h3>\n          <MatchesTable items={teamStatistic.data} teams={teams}></MatchesTable>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Team;\n","/app/src/views/Dashboard/CreateGame/index.js",["143"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { ROUTE_PATH } from \"src/constants\";\nimport actions from \"src/store/actions\";\nimport SelectTeam from \"src/components/SelectTeam\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginLeft: 12,\n    marginRight: 12,\n  },\n  select: {\n    width: \"auto\",\n  },\n}));\n\nconst initForm = {\n  team1: 0,\n  team2: 0,\n  score1: 0,\n  score2: 0,\n};\n\nconst CreateGame = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const teams = useSelector((state) => state.team.list);\n\n  const [form, setForm] = useState(initForm);\n\n  useEffect(() => {\n    dispatch(actions.teamActions.getTeamsRequest());\n  }, []);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const _form = { ...form };\n    _form[name] = value;\n    setForm(_form);\n  };\n\n  const recordGame = () => {\n    dispatch(actions.scoreActions.recordScoreRequest(form));\n    setForm(initForm);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Button\n        color=\"primary\"\n        component={RouterLink}\n        to={ROUTE_PATH.DASHBOARD}\n        variant=\"outlined\"\n      >\n        Back to Dashboard\n      </Button>\n      <Box display=\"flex\" justifyContent=\"space-around\" alignItems=\"center\">\n        <Box display=\"flex\" flexDirection=\"column\">\n          <SelectTeam\n            items={teams}\n            name=\"team1\"\n            value={form.team1}\n            onChange={handleInputChange}\n          ></SelectTeam>\n          <TextField\n            name=\"score1\"\n            onChange={handleInputChange}\n            className={classes.textField}\n            value={form.score1}\n            type=\"number\"\n            placeholder=\"Team 1 Score\"\n            margin=\"normal\"\n          />\n        </Box>\n        <h4>vs</h4>\n        <Box display=\"flex\" flexDirection=\"column\" width={classes.select}>\n          <SelectTeam\n            items={teams}\n            name=\"team2\"\n            value={form.team2}\n            onChange={handleInputChange}\n          ></SelectTeam>\n          <TextField\n            name=\"score2\"\n            onChange={handleInputChange}\n            className={classes.textField}\n            value={form.score2}\n            type=\"number\"\n            placeholder=\"Team 2 Score\"\n            margin=\"normal\"\n          />\n        </Box>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={recordGame}\n          disabled={!form.team1 || !form.team2 || form.team1 === form.team2}\n        >\n          Record Game\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default CreateGame;\n","/app/src/views/Dashboard/index.js",["144"],"import React, { useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ROUTE_PATH } from \"src/constants\";\nimport actions from \"src/store/actions\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingLeft: 36,\n    paddingRight: 36,\n  },\n  table: {},\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const overall = useSelector((state) => state.score.overall);\n\n  useEffect(() => {\n    dispatch(actions.scoreActions.getStatisticsRequest());\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Box my={6} display=\"flex\" justifyContent=\"space-around\">\n        <Button\n          color=\"primary\"\n          component={RouterLink}\n          to={ROUTE_PATH.START_GAME}\n          variant=\"contained\"\n        >\n          Start Game(US#1)\n        </Button>\n        <Button\n          color=\"primary\"\n          component={RouterLink}\n          to={ROUTE_PATH.CREATE_GAME}\n          variant=\"contained\"\n        >\n          Record Game(US#2)\n        </Button>\n        <Button\n          color=\"primary\"\n          component={RouterLink}\n          to={ROUTE_PATH.CREATE_TEAM}\n          variant=\"contained\"\n        >\n          Create Team(US#3)\n        </Button>\n      </Box>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"Dashboard table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Team/Player Name</TableCell>\n              <TableCell align=\"center\">Games Played</TableCell>\n              <TableCell align=\"center\">Wins</TableCell>\n              <TableCell align=\"center\">Losses</TableCell>\n              <TableCell align=\"center\">Draw</TableCell>\n              <TableCell align=\"center\">Win Ratio</TableCell>\n              <TableCell align=\"center\">GF</TableCell>\n              <TableCell align=\"center\">GA</TableCell>\n              <TableCell align=\"center\">GD</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {overall.map((row, index) => (\n              <TableRow key={`${row.team.name} ${index}`}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.team.name} ({row.team.info})\n                </TableCell>\n                <TableCell align=\"center\">\n                  {row.statistic.wins +\n                    row.statistic.losses +\n                    row.statistic.draw}\n                </TableCell>\n                <TableCell align=\"center\">{row.statistic.wins}</TableCell>\n                <TableCell align=\"center\">{row.statistic.losses}</TableCell>\n                <TableCell align=\"center\">{row.statistic.draw}</TableCell>\n                <TableCell align=\"center\">\n                  {row.statistic.ratio?.toFixed(2)}\n                </TableCell>\n                <TableCell align=\"center\">{row.statistic.gf}</TableCell>\n                <TableCell align=\"center\">{row.statistic.ga}</TableCell>\n                <TableCell align=\"center\">{row.statistic.gd}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/app/src/views/Dashboard/StartGame/index.js",["145"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box, Button, makeStyles } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { ROUTE_PATH } from \"src/constants\";\nimport actions from \"src/store/actions\";\nimport SelectTeam from \"src/components/SelectTeam\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginLeft: 12,\n    marginRight: 12,\n  },\n  select: {\n    minWidth: \"100px\",\n  },\n  score: {\n    marginTop: 24,\n    marginBottom: 36,\n  },\n}));\n\nconst initForm = {\n  team1: 0,\n  team2: 0,\n  score1: 0,\n  score2: 0,\n};\n\nconst StartGame = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const teams = useSelector((state) => state.team.list);\n  const createdTeam = useSelector((state) => state.score.createdTeam);\n\n  const [form, setForm] = useState(initForm);\n\n  useEffect(() => {\n    dispatch(actions.scoreActions.clearStore());\n    dispatch(actions.teamActions.getTeamsRequest());\n  }, []);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const _form = { ...form };\n    _form[name] = value;\n    setForm(_form);\n  };\n\n  const startGame = () => {\n    dispatch(actions.scoreActions.recordScoreRequest(form));\n  };\n\n  const scored = (isHome) => {\n    const _form = { ...form };\n    if (isHome) _form.score1++;\n    else _form.score2++;\n    setForm(_form);\n    dispatch(\n      actions.scoreActions.updateScoreRequest({\n        ..._form,\n        scoreId: createdTeam.id,\n      })\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Button\n        color=\"primary\"\n        component={RouterLink}\n        to={ROUTE_PATH.DASHBOARD}\n        variant=\"outlined\"\n      >\n        Back to Dashboard\n      </Button>\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-around\"\n        alignItems=\"center\"\n        mt={5}\n      >\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <SelectTeam\n            className={classes.select}\n            items={teams}\n            name=\"team1\"\n            value={form.team1}\n            onChange={handleInputChange}\n            disabled={!!createdTeam}\n          ></SelectTeam>\n          {createdTeam && (\n            <>\n              <h3 className={classes.score}>{createdTeam.score1}</h3>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => scored(true)}\n              >\n                Scored (+1)\n              </Button>\n            </>\n          )}\n        </Box>\n        <h4>vs</h4>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <SelectTeam\n            className={classes.select}\n            items={teams}\n            name=\"team2\"\n            value={form.team2}\n            onChange={handleInputChange}\n            disabled={!!createdTeam}\n          ></SelectTeam>\n          {createdTeam && (\n            <>\n              <h3 className={classes.score}>{createdTeam.score2}</h3>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => scored(false)}\n              >\n                Scored (+1)\n              </Button>\n            </>\n          )}\n        </Box>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={startGame}\n          disabled={\n            !form.team1 ||\n            !form.team2 ||\n            form.team1 === form.team2 ||\n            !!createdTeam\n          }\n        >\n          Start Game\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default StartGame;\n","/app/src/views/Dashboard/CreateTeam/index.js",["146"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n} from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ROUTE_PATH } from \"src/constants\";\nimport actions from \"src/store/actions\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginLeft: 12,\n    marginRight: 12,\n  },\n  list: {\n    width: \"30%\",\n  },\n  textField: {\n    marginRight: 28,\n  },\n}));\n\nconst CreateTeam = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const teams = useSelector((state) => state.team.list);\n  const [form, setForm] = useState({ name: \"\", info: \"\" });\n\n  useEffect(() => {\n    dispatch(actions.teamActions.getTeamsRequest());\n  }, []);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const _form = { ...form };\n    _form[name] = value;\n    setForm(_form);\n  };\n\n  const createTeam = () => {\n    dispatch(actions.teamActions.createTeamRequest(form));\n    setForm({ name: \"\", info: \"\" });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Box mb={3}>\n        <Button\n          color=\"primary\"\n          component={RouterLink}\n          to={ROUTE_PATH.DASHBOARD}\n          variant=\"outlined\"\n        >\n          Back to Dashboard\n        </Button>\n      </Box>\n      <Box display=\"flex\" alignItems=\"center\">\n        <TextField\n          id=\"team-name\"\n          name=\"name\"\n          onChange={handleInputChange}\n          className={classes.textField}\n          value={form.name}\n          placeholder=\"Team Name\"\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"team-info\"\n          name=\"info\"\n          onChange={handleInputChange}\n          className={classes.textField}\n          value={form.info}\n          placeholder=\"Team Information\"\n          margin=\"normal\"\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={createTeam}\n          disabled={!form.name || !form.info}\n        >\n          Create Team\n        </Button>\n      </Box>\n      <Box mt={3}>\n        <h3>All Teams</h3>\n        <List component=\"nav\" className={classes.list}>\n          {teams.map((team) => (\n            <ListItem button key={team.id}>\n              <ListItemText primary={`${team.name}(${team.info})`} />\n            </ListItem>\n          ))}\n        </List>\n      </Box>\n    </div>\n  );\n};\n\nexport default CreateTeam;\n","/app/src/layouts/Sidebar/index.js",[],"/app/src/store/index.js",[],"/app/src/store/reducers/index.js",[],"/app/src/store/sagas/index.js",[],"/app/src/store/reducers/team.js",[],"/app/src/store/sagas/team.js",[],"/app/src/store/actions/index.js",[],"/app/src/store/actions/team.js",[],"/app/src/store/actions/types.js",[],"/app/src/utils/api.js",[],"/app/src/store/actions/score.js",[],"/app/src/store/reducers/score.js",[],"/app/src/store/sagas/score.js",[],"/app/src/store/actions/global.js",[],"/app/src/store/reducers/global.js",[],"/app/src/components/SelectTeam.js",[],"/app/src/components/MatchesTable.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":33,"column":6,"nodeType":"153","endLine":33,"endColumn":8,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"152","line":39,"column":6,"nodeType":"153","endLine":39,"endColumn":12,"suggestions":"155"},{"ruleId":"151","severity":1,"message":"152","line":40,"column":6,"nodeType":"153","endLine":40,"endColumn":8,"suggestions":"156"},{"ruleId":"151","severity":1,"message":"152","line":46,"column":6,"nodeType":"153","endLine":46,"endColumn":12,"suggestions":"157"},{"ruleId":"151","severity":1,"message":"152","line":36,"column":6,"nodeType":"153","endLine":36,"endColumn":8,"suggestions":"158"},{"ruleId":"151","severity":1,"message":"152","line":37,"column":6,"nodeType":"153","endLine":37,"endColumn":8,"suggestions":"159"},{"ruleId":"151","severity":1,"message":"152","line":42,"column":6,"nodeType":"153","endLine":42,"endColumn":8,"suggestions":"160"},{"ruleId":"151","severity":1,"message":"152","line":37,"column":6,"nodeType":"153","endLine":37,"endColumn":8,"suggestions":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["164"],["165"],["166"],["167"],["168"],["169"],["170"],["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"172","fix":"176"},{"desc":"177","fix":"178"},{"desc":"172","fix":"179"},{"desc":"172","fix":"180"},{"desc":"172","fix":"181"},{"desc":"172","fix":"182"},"Update the dependencies array to be: [dispatch]",{"range":"183","text":"184"},"Update the dependencies array to be: [dispatch, form]",{"range":"185","text":"186"},{"range":"187","text":"184"},"Update the dependencies array to be: [dispatch, team]",{"range":"188","text":"189"},{"range":"190","text":"184"},{"range":"191","text":"184"},{"range":"192","text":"184"},{"range":"193","text":"184"},[961,963],"[dispatch]",[1119,1125],"[dispatch, form]",[1018,1020],[1146,1152],"[dispatch, team]",[858,860],[799,801],[1027,1029],[828,830]]